1.平均查找长度：为了确定数据元素在列表中的位置，需要将关键字个数的期望值与指定值进行比较，这个期望值被称为查找算法在查找成功时的平均查找长度
	ASL=P1C1+...+PnCn，Pi表示查找列表中第i个数据元素的概率，Ci为当找到列表中第i个数据元素时已经经过的比较次数
2.查找的基本方法分为比较式查找和计算式查找，比较式又分为基于线性表和基于树，计算式查找指哈希查找
3.顺序查找Ci=n-1+1（n为长度），Pi=1/n，则ASL=1/2（n+i）
4.平衡二叉树的四种旋转：LR,LL,RL,RR，设最低层的失衡节点为a，b为a的左子树，c为b的右子树，cl是c的左子树，cr是c的右子树
	LL：在a的左子树的左子树插入新节点失衡，a->bf=2，b->bf=1，旋转方法：可以把a改为b的右子，将b原来的右子改为a的左子，对a做了一个顺时针旋转
	LR：在a的左子树的右子树插入节点后失衡，a->bf=2，b->bf=-1，旋转方法：可以把b改为c的左子，将cl改为b的右子，将a改为c的右子，将cr改为a的左子，对b逆时针旋转，a顺时针旋转
	RL：在a的左子树的左子树插入新节点失衡，a->bf=2，b->bf=1，旋转方法：先ll，再rrl
	RR：在a的右子树的右子树插入节点后失衡，a->bf=-2，b->bf=-1，旋转方法：可以把a改为b的左子，将b原来的左子改为a的右子，对a做了一个逆时针旋转
5.已知一个长度为16的顺序表L，其元素按关键字有序排列，若使用折半查找查找一个不存在的元素，关键字的比较次数最多是5次，也就是判定树的高度，根节点对应当前区间的中间记录，左子树对应前一个子表，右子树对应后一个子表
6.装填因子：数据总数/表长
7.减小装填因子可以提高散列表的查找效率，处理冲突时可以减少但不能避免堆积现象，设计碰撞少的散列函数可以提高散列表的查找效率
8.平衡因子是左子树-右子树
9.设平衡二叉树的高度是6，且所有非叶节点的平衡因子是1，该平衡二叉树的节点数是20.设以Nh表示深度为h的平衡二叉树中含有的最少节点数。显然，N0=0，N1=1，N2=2，并且Nh=N（h-1）+N（h-2）+1，即高为h的平衡二叉树的左子树高为h-1，右子树高为h-2，左右子树均为含有最少节点数的平衡二叉树。
10.在任何一棵非空二叉树，删除叶子节点再插入不会改变树形，否则一定会改变树形
11.堆积现象主要影响到的是哈希表的平均查找长度
12.在单链表中查找给定关键字的节点的时间复杂度为O（n）
13.将两个各有n个元素的有序表归并为一个有序表，最多的比较次数为2*n-1
14.有序表最有效的查找方式：二分查找
15.折半查找用判定数来确定比较次数，时间复杂度为O（logn）
16.分块查找数据的组织方式是数据分成若干块，每块内数据不必有序，但块间必须有序，每块内最大（最小）的数据组成索引块
17.对大小均为n的有序表和无序表进行顺序查找，在等概率查找的情况下，对于查找失败，他们的平均查找长度是不同的，对于查找成功，是相同的
18.分块查找（索引顺序查找）较快的查找也便于动态变化
19.n足够大时，按值有序的顺序表中进行折半查找，ASL=log2（n+1）-1，（准确的说，（（n+1）/n）log2（n+1）-1）
20.次优查找树表示静态查找树，分块查找属于静态查找
21.逐点插入二叉排序树时，若先后插入的关键字有序，二叉排序树的深度最大
22.完全二叉树的深度公式int(log2n)+1，也可以是log2（n+1）向上取整
23.深度为k的平衡二叉树，每个非叶节点的平衡因子都为0，则该树是满二叉树
24.平衡二叉树的查找效率与二叉树的深度有关
25.理论上，散列表的平均比较次数为1次
26.散列函数的共同性质：函数值应当以同等概率取其值域的每个值
27.采用链地址法解决冲突的哈希表，查找成功的平均查找长度直接与哈希函数有关
28.链地址法是动态申请节点，容量只受内存所限
29.不存在特别好与坏的哈希函数，要视情况而定
30.再哈希同时构造多个不同的哈希函数，但发生冲突时计算另一个哈希函数的值，直到冲突不再产生，不易产生聚集
31.散列地址空间为0-n-1，为了减少冲突发生的概率一般取p为小于m的最大素数
32.折半查找与二元查找树的时间性能在最坏情况下是不同的
33.分块查找将长为n的表分成均等的b个块，每块s个元素，b=（n/s），如果索引表采用顺序查找，则asl=（b+1）/2+（s+1）/2；如果采用折半查找，则asl=（s+1）/2+log2（b+1）-1
34.二叉树排序树的定义：如果有左子树，那么左子树的所有节点都小于根节点；如果有右子树，那么右子树的所有节点都大于根节点
35.对于给定关键字集合，以不同的次序插入初始为空的二元树，可能得到同一棵二叉排序树
36.散列表的平均检索长度不随表中节点数目的增加而增加，而是随负载因子增加而增加
37.具有n个元素的顺序表进行顺序查找，查找成功的asl为（n+1）/2；查找不成功的asl为n+1，最后一个位置也要查一次
38.n个节点的用于折半查找的判定树，表示查找失败的外部节点共有n+1个
39.顺序查找储存方式要求顺序或链接，二分查找要求顺序有序，分块查找要求块内顺序有序，块间有序，哈希查找要求散列存储
40.处理哈希冲突的方法：1.开散列 2.闭散列 3.再哈希 4.建立公共溢出区，将哈希表分为基本表和溢出表两部分，凡是冲突元素一律填入溢出表
41.构造散列表时主要包括地址、关键字、比较次数，散列表长为元素个数/装填因子，查找成功的平均查找长度为1/n（每个元素的查找长度和）；查找失败的平均查找次数，必须计算不在表中的关键字，当哈希地址是i的查找次数，哈希地址为i的失败比较次数是从i开始往右循环数到没有数据的位置。
42.监视哨的作用就是免去查找过程中每次都要检测整个表是否查找完毕，提高了查找效率。
43.从具有n个元素的集合中查找最大和次大的元素使用堆排序，查找最大元素最多比较不超过4n次，再选次大元素用logn次
44.分块查找：设有n个记录，每块内有s个记录，容易证明，s取根号n时，asl取最小值根号n+1
45.折半查找查找一个失败节点的次数是失败节点的层数-1
46.线性探测法解决冲突的哈希表，同义词不一定相邻
47.构造哈希函数的方法：
	（1）数字分析法：该方法需要事先知道关键字集合，且关键字位数比散列表地址位数多
	（2）平方取中法：关键字的平方取中间几位
	（3）除留余数法
	（4）折叠法：将关键字分成长度相等的几部分进行移位叠加或间界叠加
	（5）基数转换法：两基数互素，且后一基数要大于前一基数
48.在哈希表中删除一个元素，链地址法可以物理的删除，开放地址法不能物理的删除只能作删除标记