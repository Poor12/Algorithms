1.树的基本定义：1.有且仅有一个特定的称为根的节点。2.其余的节点可分为m个互不相交的有限集合T1...Tm
2.树的基本概念：
	（1）节点的度：一个节点的子树个数
	（2）树的度：一棵树中节点度的最大值
	（3）叶子：度为0的节点(也叫终端节点）
	（4）分支节点：度不为0的节点
	（5）内部节点：除根节点之外的分支节点
	（6）孩子：将树中某个节点的子树的根称为这个节点的孩子
	（7）双亲：某个节点的上层节点称为这个节点的双亲
	（8）兄弟：同一双亲的孩子
	（9）路径：如果在树中存在一个节点序列k1，k2，kj，使得ki是ki+1的双亲，则该节点序列是从k1到kj的一条路径
	（10）祖先：如果树中节点k到ks之间存在一条路径，则称k是ks的祖先
	（11）子孙：ks是k的子孙
	（12）层次：节点的层次是从根开始算起，第1层为根
	（13）高度：树中节点的最大层次称为树的高度/深度
	（14）森林：n棵互不相交的树的集合
	（15）平衡因子：左子树深度-右子树深度
	（16）扩充二叉树：在二叉树中出现空子树的位置增加空树叶使称为满二叉树
3.二叉树的形态：1.空二叉树 2.只有一个根节点的二叉树 3.左子树为空的二叉树 4.右子树为空的二叉树 5.完全二叉树：（只有最下面两层的节点度小于2，且最下面一层的节点都集中处于该层的左侧）//满二叉树：叶子节点都位于最底层
4.二叉树的性质：
	（1）二叉树中，第i层的节点总数不超过2^(i-1)
	（2）深度为h的二叉树最少有h个节点，最多有2^h-1个节点
	（3）对于任意一棵二叉树，如果叶节点数为n0，且度为2的节点总数为n2，则n0=n2+1
	（4）有n个节点的完全二叉树的深度为int(log2n)+1
	（5）存在一个有n个节点的完全二叉树，如果各节点用顺序方式存储，则节点有以下性质：
		1.如果i=1，则节点i为根，无父节点；如果i>1，则其父节点编号为trunc(n/2)
		2.如果2i<=n，则其左儿子的编号为2i；如果2i>n，则无左儿子
		3.如果2i+1<=n，则其右儿子的编号为2i+1；如果2i+1>n，则无右儿子
	（6）假设有n个节点，能构成h（n）种不同的二叉树，则h（n）=C（n，2n）/（n+1）
 哈夫曼树的基本概念：
	（1）路径：从树中一个节点到另一个节点之间的分支构成这两个节点间的路径
	（2）路径长度：路径上的分支数目称为路径长度
	（3）树的路径长度：从树根到每一个节点的路径长度之和
	（4）节点的带权路径长度：从该节点到树根之间的路径长度*节点权
	（5）树的带权路径长度：是树中所有叶子节点的带权路径长度之和WPL
	（6）哈夫曼编码：哈夫曼树的二进制前缀码
5.线索二叉树是指n个节点的二叉链表中含有n+1个空指针域，利用二叉链表中的空指针域，存放指向节点在某种遍历次序下的前趋和后继节点的指针（称为线索），相应的二叉树称为线索二叉树
6.线索二叉树解决了二叉链表找左、右孩子困难的问题，解决了无法直接找到该节点在某种遍历序列的前趋和后继节点问题。
7.建立线索二叉树的过程是遍历一棵二叉树，在遍历过程中需要检查当前节点的左、右指针域是否为空，如果为空，将它们改为指向前趋节点或后继节点的线索
8.中序线索二叉树上遍历二叉树时不需要设栈，时间复杂度为O（n），并且在遍历过程中也无需由叶子向树根回溯，所以若经常需要遍历效率较高
9.将森林转换成对应的二叉树，若在二叉树中，结点u是节点v的父节点的父节点，则在原来的森林中，u和v可能具有的关系是1.父子关系，u是v的左子女的右子女；2.兄弟关系，u是v的右子女的右子女；不存在u的父节点和v的父节点是兄弟关系
10.度为m的树中，叶子节点个数的求解公式n0=1+（i-1）*ni（i=1-n求和，其中ni是度i的节点数）
11.哈夫曼树的叙述：树中一定没有度为1的节点，树中两个权值最小的节点一定是兄弟节点，树中任一非叶节点的权值一定不小于下一层任一节点的权值，树不一定是完全二叉树
12.完全二叉树中，节点总数=度为0的叶子节点+度为1的节点+度为2的节点，因为n2=n0-1，所以n=2n0+n1-1，完全二叉树中，n1取1或0，因此在完全二叉树中，知道（总结点数，，叶子数，度为2的节点数）可求其他量
13.已知一棵有2011个节点的树，其叶节点个数为116，该树对应的二叉树中无右孩子的节点个数为1896个，树在转换成二叉树时非终端节点子女中的最右子女节点的右指针为空。另外森林中互为兄弟，转换为二叉树时根节点的右指针为空。因此=非终端节点数+1
14.已知三叉树T中6个叶节点的权分别是2，3，4，5，6，7，求T的最小带权（外部）路径长度。对k叉树，设m为叶子节点，若（m-1）%（k-1）！=0，要增加虚节点。第一次构造用（m-1）%（k-1）+1个节点，之后都用k个节点构造k叉树
15.将森林F转换成对应的二叉树T，F中叶节点的个数为T中左孩子指针为空的节点个数
16.判断是否为前缀码，将前缀码还原成树，观察是否是哈夫曼树
17.先序遍历为1，2，3，...n的不同的二叉树的数目是(1/(n+1)) * ((2n)!/(n!*n!))，也是n个节点可以构造出的不同的二叉树总数。n个节点构造的不同的树等于n-1个节点可以构造的不同的二叉树的数量。
18.树是一种逻辑关系，表示数据元素之间存在的关系是一对多
19.二叉树不是度为2的树，有左右孩子之分
20.一棵二叉树的度可以小于2，等于0或1
21.每个节点度或为0或为2的二叉树称为正则二叉树，n个节点的正则二叉树有（n+1）/2个叶子
22.有n个节点，并且高度为n的二叉树的数目=二叉树的第n层上最多有多少个节点，因此等于2^(n-1)
23.任何一棵二叉树的叶子节点在前序、中序、后序的相对位置不会发生变化
24.要交换其所有分支节点左右子树的位置，使用先序或后序遍历
25.中序与任意一种其他遍历方式（前序、后序、层序）都能唯一确定一棵二叉树
26.一棵非空的二叉树的先序序列和后序序列正好相反，则该二叉树一定满足其中只有一个叶子节点  ；前序与中序相反的二叉树是所有节点没有右孩子
27.前序与中序遍历结果相同的二叉树是所有节点没有左孩子，前序与后序相同的二叉树是只有根节点的二叉树
28.对任意一棵树，设它有n个节点，这n个节点的度数之和为n-1。树中除根以外的节点都有分支所指，也可以理解为树中的点和边之间的关系
29.高度为h的满二叉树对应的森林由h棵树组成
30.哈夫曼树可以称为二叉树，但并不全是二叉树
31.线索二叉树是一种物理结构
32.n个节点的线索二叉树上含有的线索树为n
33.后序线索树的遍历需要栈的支持或添加parent指针
34.采用双亲表示法表示树，则具有n个节点的树至少需要n-1个指向双亲的指针
35.树用孩子兄弟表示法，每个节点有两个指针域，分别指向第一个孩子和下一个兄弟，若指向下一个兄弟的指针有n个为空，则该树有n-1个非终端节点
36.设森林F对应的二叉树为b，它有m个节点，b的根为p，p的右子树节点个数为n，森林中第一棵树的节点个数为m-p
37.设F是一个森林，B是F变换的二叉树，若F中有n个非终端节点，则B中右指针为空的节点有n+1个
38.从任意节点出发到根的路径上所经过的节点序列按关键字有序的为堆，二叉排序树以及哈夫曼树不满足
39.在叶子数目和权值相同的所有二叉树中，完全二叉树一定是最优二叉树，最优二叉树不一定是完全二叉树
40.一个哈夫曼树共有215个节点，对其进行Huffman编码，共能得到108个字符，即求n0
41.度为m的哈夫曼树，其叶节点个数为n，非叶节点的个数为（n-1）/（m-1）
42.二叉树是一般树的特殊情形，错误
43.树与二叉树是两种不同的树形结构
44.任意一棵二叉树中，分支节点的数目不一定少于叶节点的数目
45.二叉树以后序遍历序列与前序遍历序列反映同样的信息。（他们反映的信息不独立）
46.完全二叉树的前序序列中，若节点u在节点v之前，则u可以为v的祖先，也可能u和v分别在左子树和右子树上
47.树的数组表示法兄弟节点的编号不一定是连续的
48.采用二叉链表（孩子-兄弟表示法），树的前序遍历和其相应的二叉树的前序遍历的结果是一样的。
49.在中序线索二叉树中，每一非空的线索均指向其祖先节点
50.若深度为k的n个节点的二叉树只有最小路径长度，则到k-1层是满二叉树，剩余节点在k层任意放置
51.用六叉链表表示30个节点的六叉树，树中共有30*6-29=151个指针（边）
52.哈夫曼树的个数不能是偶数
53.树没有中根遍历，树的前根遍历对应于转换后的二叉树的前序遍历，树的后根遍历对应于转换后的二叉树的中序遍历
54.树与二叉树的转换关系：树中每一个节点的第一个孩子节点在二叉树中是对应节点的左孩子，树中每一个节点的右邻兄弟在二叉树的对应节点是对应节点的右孩子。
55.树的先根遍历：先访问根节点，再访问子树节点，从上到下，从左到右。
56.树的后根遍历：先访问子树再访问根节点，由下而上，从左到右。
57.树的中根遍历因为排序问题而不存在。
？？？58.森林没有后根遍历，森林的前根遍历对应于转换后的二叉树的前序遍历，森林的中根遍历对应于转换后的二叉树的中序遍历
59.顺序存储的二叉树中，编号为i和j的两个节点的同一层的条件是int(log2i)=int(log2j)，从1开始编号
60.已知一棵完全二叉树的第6层有8个叶节点，则该完全二叉树最多有多少个节点？第6层有32个节点，若有8个叶子，则最多还有24个节点都不是叶子，假设都满，则第7层有48个节点，总共111个，若只有8个叶子节点，则为39个节点
